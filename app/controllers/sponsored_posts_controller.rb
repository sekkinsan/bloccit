class SponsoredPostsController < ApplicationController
  def show
  #find the post that corresponds to the id in the params that was passed to show and assign it to @sponsored_post
    @sponsored_post = SponsoredPost.find(params[:id])
  end

  def new
    @topic = Topic.find(params[:topic_id])
  #creating instance variable, then assign it an empty post returned by SponsoredPost.new
    @sponsored_post = SponsoredPost.new
  end

  def create
  #call SponsoredPost.new to create a new instance of SponsoredPost
    @sponsored_post = SponsoredPost.new
    @sponsored_post.title = params[:sponsored_post][:title]
    @sponsored_post.body = params[:sponsored_post][:body]
    @sponsored_post.price = params[:sponsored_post][:price]
    @topic = Topic.find(params[:topic_id])

    @sponsored_post.topic = @topic

  #successfully save Post to database, display success message and redirect the user to route generated by @sponsored_post
    if @sponsored_post.save
      #assign value to flash[:notice], flash hash provides a way to pass temporary values between actions
      #value placed in flash will be available in next action and then deleted
      flash[:notice] = "Sponsored Post was saved"
      redirect_to [@topic, @sponsored_post]
    else

      #if unsuccessful in saving Post to database, we display an error message and render new view again
      flash.now[:alert] = "There was an error saving the sponsored post. Please try again."
      render :new
    end
  end

  def edit
    @sponsored_post = SponsoredPost.find(params[:id])
  end

  def update
    @sponsored_post = SponsoredPost.find(params[:id])
    @sponsored_post.title = params[:sponsored_post][:title]
    @sponsored_post.body = params[:sponsored_post][:body]
    @sponsored_post.price = params[:sponsored_post][:price]

    if @sponsored_post.save
      flash[:notice] = "Sponsored Post was updated."
      redirect_to [@sponsored_post.topic, @sponsored_post]
    else
      flash.now[:alert] = "There was an error saving the sponsored post. Please try again."
      render :edit
    end
  end

  def destroy
    @sponsored_post = SponsoredPost.find(params[:id])

#
    if @sponsored_post.destroy
      flash[:notice] = "\"#{@sponsored_post.title}\" was deleted successfully."
      redirect_to @sponsored_post.topic
    else
      flash.now[:alert] = "There was an error deleting that sponsored post. Please try again."
      render :show
    end
  end

end
